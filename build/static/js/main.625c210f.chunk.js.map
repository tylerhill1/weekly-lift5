{"version":3,"sources":["components/create-exercise.component.js","components/edit-exercise.component.js","components/workout-plan.component.js","App.js","serviceWorker.js","index.js"],"names":["CreateExercise","props","onChangeExerciseDay","bind","onChangeExerciseName","onChangeExerciseWeight","onChangeExerciseSets","onChangeExerciseReps","onSubmit","state","exercise_day","exercise_name","exercise_weight","exercise_sets","exercise_reps","exercise_completed","e","this","setState","target","value","preventDefault","console","log","newExercise","axios","post","then","res","data","style","marginTop","className","type","name","id","checked","onChange","Component","EditExercise","onChangeExerciseCompleted","get","match","params","response","catch","error","obj","history","push","htmlFor","Exercise","exercise","to","_id","WorkoutPlan","exercises","filter","current","map","currentExercise","i","key","upperBodyAList","lowerBodyAList","upperBodyBList","lowerBodyBList","App","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.625c210f.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport axios from 'axios';\n\nexport default class CreateExercise extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.onChangeExerciseDay = this.onChangeExerciseDay.bind(this);\n        this.onChangeExerciseName =\n        this.onChangeExerciseName.bind(this);\n        this.onChangeExerciseWeight =\n        this.onChangeExerciseWeight.bind(this);\n        this.onChangeExerciseSets =\n        this.onChangeExerciseSets.bind(this);\n        this.onChangeExerciseReps =\n        this.onChangeExerciseReps.bind(this);\n        this.onSubmit =\n        this.onSubmit.bind(this);\n\n        this.state = {\n            exercise_day: \"\",\n            exercise_name: \"\",\n            exercise_weight: \"\",\n            exercise_sets: \"\",\n            exercise_reps: \"\",\n            exercise_completed: false,\n        }\n    }\n\n    onChangeExerciseDay(e) {\n        this.setState({\n            exercise_day: e.target.value\n        });\n    };\n\n    onChangeExerciseName(e) {\n        this.setState({\n            exercise_name: e.target.value\n        });\n    }\n\n    onChangeExerciseWeight(e) {\n        this.setState({\n            exercise_weight: e.target.value\n        });\n    }\n\n    onChangeExerciseSets(e) {\n        this.setState({\n            exercise_sets: e.target.value\n        });\n    }\n\n    onChangeExerciseReps(e) {\n        this.setState({\n            exercise_reps: e.target.value\n        });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        console.log(\"Form submitted:\");\n        console.log(\"Exercise Day: \" + this.state.exercise_day);\n        console.log(\"Exercise Name: \" + this.state.exercise_name);\n        console.log(\"Exercise Weight: \" + this.state.exercise_weight);\n        console.log(\"Exercise Sets: \" + this.state.exercise_sets);\n        console.log(\"Exercise Reps: \" + this.state.exercise_reps);\n        console.log(\"Exercise Completed: \" + this.state.exercise_completed);\n\n        const newExercise = {\n            exercise_day: this.state.exercise_day,\n            exercise_name: this.state.exercise_name,   exercise_weight: this.state.exercise_weight,\n            exercise_sets: this.state.exercise_sets,\n            exercise_reps: this.state.exercise_reps,\n            exercise_completed: this.state.exercise_completed\n        }\n\n        axios.post('http://localhost:4000/exercises/add', newExercise)\n            .then(res => console.log(res.data));\n\n        this.setState({\n            exercise_day: \"\",\n            exercise_name: \"\",\n            exercise_weight: \"\",\n            exercise_sets: \"\",\n            exercise_reps: \"\",\n            exercise_completed: false,\n        })\n    }\n\n  render() {\n    return (\n      <div style={{marginTop: 20}}>\n        <h3>Create New Exercise</h3>\n        <br></br>\n        <form onSubmit={this.onSubmit}>\n        <div className=\"form-group\">\n                <label><strong>Workout Day: </strong></label>\n                <br></br>\n                <div className=\"form-check form-check-inline\">\n                    <input className=\"form-check-input\" type=\"radio\" name=\"exerciseDayOptions\" id=\"upperBodyA\" value=\"Upper Body A\" checked={this.state.exercise_day==='Upper Body A'} onChange={this.onChangeExerciseDay} />\n                    <label className=\"form-check-label\">Upper Body A</label>\n                    </div>\n                    <div className=\"form-check form-check-inline\">\n                    <input className=\"form-check-input\" type=\"radio\" name=\"exerciseDayOptions\" id=\"upperBodyB\" value=\"Upper Body B\" checked={this.state.exercise_day==='Upper Body B'} onChange={this.onChangeExerciseDay} />\n                    <label className=\"form-check-label\">Upper Body B</label>\n                    </div>\n                    <div className=\"form-check form-check-inline\">\n                    <input className=\"form-check-input\" type=\"radio\" name=\"exerciseDayOptions\" id=\"lowerBodyA\" value=\"Lower Body A\" checked={this.state.exercise_day==='Lower Body A'} onChange={this.onChangeExerciseDay} />\n                    <label className=\"form-check-label\">Lower Body A</label>\n                    </div>\n                    <div className=\"form-check form-check-inline\">\n                    <input className=\"form-check-input\" type=\"radio\" name=\"exerciseDayOptions\" id=\"lowerBodyB\" value=\"Lower Body A\" checked={this.state.exercise_day==='Lower Body B'} onChange={this.onChangeExerciseDay} />\n                    <label className=\"form-check-label\">Lower Body B</label>\n                    </div>\n            </div>\n            <div className=\"form-group\">\n                <label><strong>Exercise Name: </strong></label>\n                <input type=\"text\" className=\"form-control\" value={this.state.exercise_name}\n                onChange={this.onChangeExerciseName}\n                />\n            </div>\n            <div className=\"form-group\">\n                <label><strong>Weight: </strong></label>\n                <input type=\"text\" className=\"form-control\" value={this.state.exercise_weight}\n                onChange={this.onChangeExerciseWeight}\n                />\n            </div>\n            <div className=\"form-group\">\n                <label><strong>Sets: </strong></label>\n                <input type=\"text\" className=\"form-control\" value={this.state.exercise_sets}\n                onChange={this.onChangeExerciseSets}\n                />\n            </div>\n            <div className=\"form-group\">\n                <label><strong>Reps: </strong></label>\n                <input type=\"text\" className=\"form-control\" value={this.state.exercise_reps}\n                onChange={this.onChangeExerciseReps}\n                />\n            </div>\n            <div className=\"form-group\">\n                <input type=\"submit\" value=\"Add Exercise\" className=\"btn btn-primary\" />\n            </div>\n        </form>\n      </div>\n    )\n  }\n}","import React, {Component} from \"react\";\nimport axios from 'axios';\n\nexport default class EditExercise extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.onChangeExerciseDay = this.onChangeExerciseDay.bind(this);\n    this.onChangeExerciseName =\n    this.onChangeExerciseName.bind(this);\n    this.onChangeExerciseWeight =\n    this.onChangeExerciseWeight.bind(this);\n    this.onChangeExerciseSets =\n    this.onChangeExerciseSets.bind(this);\n    this.onChangeExerciseReps =\n    this.onChangeExerciseReps.bind(this);\n    this.onChangeExerciseCompleted = this.onChangeExerciseCompleted.bind(this);\n    this.onSubmit =\n    this.onSubmit.bind(this);\n\n    this.state = {\n        exercise_day: \"\",\n        exercise_name: \"\",\n        exercise_weight: \"\",\n        exercise_sets: \"\",\n        exercise_reps: \"\",\n        exercise_completed: false,\n    }\n}\n\n  componentDidMount() {\n    axios.get('http://localhost:4000/exercises/' + this.props.match.params.id)\n      .then(response => {\n        this.setState({\n          exercise_day: response.data.exercise_day,\n          exercise_name: response.data.exercise_name,\n          exercise_weight: response.data.exercise_weight,\n          exercise_sets: response.data.exercise_sets,\n          exercise_reps: response.data.exercise_reps,\n          exercise_completed: response.data.exercise_completed,\n        })\n      })\n      .catch(function(error) {\n        console.log(error)\n      })\n  }\n\n  onChangeExerciseDay(e) {\n    this.setState({\n        exercise_day: e.target.value\n    });\n};\n\nonChangeExerciseName(e) {\n    this.setState({\n        exercise_name: e.target.value\n    });\n}\n\nonChangeExerciseWeight(e) {\n    this.setState({\n        exercise_weight: e.target.value\n    });\n}\n\nonChangeExerciseSets(e) {\n    this.setState({\n        exercise_sets: e.target.value\n    });\n}\n\nonChangeExerciseReps(e) {\n    this.setState({\n        exercise_reps: e.target.value\n    });\n}\n\nonChangeExerciseCompleted(e) {\n  this.setState({\n      exercise_completed: !this.state.exercise_completed\n  });\n}\n\nonSubmit(e) {\n  e.preventDefault();\n  const obj = {\n    exercise_day: this.state.exercise_day,\n    exercise_name: this.state.exercise_name,\n    exercise_weight: this.state.exercise_weight,\n    exercise_sets: this.state.exercise_sets,\n    exercise_reps: this.state.exercise_reps,\n    exercise_completed: this.state.exercise_completed,\n  };\n  axios.post('http://localhost:4000/exercises/update/' + this.props.match.params.id, obj)\n  .then(res => console.log(res.data));\n  \n  this.props.history.push('/')\n}\n\n  render() {\n    return (\n      <div style={{marginTop: 20}}>\n        <h3>Update Exercise</h3>\n        <form onSubmit={this.onSubmit}>\n        <div className=\"form-group\">\n                <label><strong>Workout Day: </strong></label>\n                <br></br>\n                <div className=\"form-check form-check-inline\">\n                    <input className=\"form-check-input\" type=\"radio\" name=\"exerciseDayOptions\" id=\"upperBodyA\" value=\"Upper Body A\" checked={this.state.exercise_day==='Upper Body A'} onChange={this.onChangeExerciseDay} />\n                    <label className=\"form-check-label\">Upper Body A</label>\n                    </div>\n                    <div className=\"form-check form-check-inline\">\n                    <input className=\"form-check-input\" type=\"radio\" name=\"exerciseDayOptions\" id=\"upperBodyB\" value=\"Upper Body B\" checked={this.state.exercise_day==='Upper Body B'} onChange={this.onChangeExerciseDay} />\n                    <label className=\"form-check-label\">Upper Body B</label>\n                    </div>\n                    <div className=\"form-check form-check-inline\">\n                    <input className=\"form-check-input\" type=\"radio\" name=\"exerciseDayOptions\" id=\"lowerBodyA\" value=\"Lower Body A\" checked={this.state.exercise_day==='Lower Body A'} onChange={this.onChangeExerciseDay} />\n                    <label className=\"form-check-label\">Lower Body A</label>\n                    </div>\n                    <div className=\"form-check form-check-inline\">\n                    <input className=\"form-check-input\" type=\"radio\" name=\"exerciseDayOptions\" id=\"lowerBodyB\" value=\"Lower Body B\" checked={this.state.exercise_day==='Lower Body B'} onChange={this.onChangeExerciseDay} />\n                    <label className=\"form-check-label\">Lower Body B</label>\n                    </div>\n            </div>\n            <div className=\"form-group\">\n                <label><strong>Exercise Name: </strong></label>\n                <input type=\"text\" className=\"form-control\" value={this.state.exercise_name}\n                onChange={this.onChangeExerciseName}\n                />\n            </div>\n            <div className=\"form-group\">\n                <label><strong>Weight: </strong></label>\n                <input type=\"text\" className=\"form-control\" value={this.state.exercise_weight}\n                onChange={this.onChangeExerciseWeight}\n                />\n            </div>\n            <div className=\"form-group\">\n                <label><strong>Sets: </strong></label>\n                <input type=\"text\" className=\"form-control\" value={this.state.exercise_sets}\n                onChange={this.onChangeExerciseSets}\n                />\n            </div>\n            <div className=\"form-group\">\n                <label><strong>Reps: </strong></label>\n                <input type=\"text\" className=\"form-control\" value={this.state.exercise_reps}\n                onChange={this.onChangeExerciseReps}\n                />\n            </div>\n            <div className=\"form-check\">\n                      <input type=\"checkbox\"\n                        className=\"form-check-input\"\n                        id=\"completedCheckbox\"\n                        name=\"completedCheckbox\"\n                        onChange={this.onChangeExerciseCompleted}\n                        checked={this.state.exercise_completed}\n                        value={this.state.exercise_completed}\n                        />\n                        <label className=\"form-check-label\" htmlFor=\"completedCheckbox\">\n                            Completed\n                        </label>\n                    </div>\n                    <br/>\n            <div className=\"form-group\">\n                <input type=\"submit\" value=\"Update Exercise\" className=\"btn btn-primary\" />\n            </div>\n        </form>\n      </div>\n    )\n  }\n}","import React, {Component} from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst Exercise = props => (\n  <tr>\n    <td className={props.exercise.exercise_completed ? 'completed' : ''}>{props.exercise.exercise_name}</td>\n    <td className={props.exercise.exercise_completed ? 'completed' : ''}>{props.exercise.exercise_weight}</td>\n    <td className={props.exercise.exercise_completed ? 'completed' : ''}>{props.exercise.exercise_sets}</td>\n    <td className={props.exercise.exercise_completed ? 'completed' : ''}>{props.exercise.exercise_reps}</td>\n    <td>\n      <Link to={\"/edit/\"+props.exercise._id}>Edit</Link>\n    </td>\n  </tr>\n)\n\nexport default class WorkoutPlan extends Component {\n  \n  constructor(props) {\n      super(props);\n      this.state = {exercises: []};\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:4000/exercises/')\n      .then(response => {\n        this.setState({exercises: response.data})\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n  }\n\n  componentDidUpdate() {\n    axios.get('http://localhost:4000/exercises/')\n      .then(response => {\n        this.setState({exercises: response.data})\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n  }\n\n  upperBodyAList() {\n    const exercise = this.state.exercises.filter( current => current.exercise_day === \"Upper Body A\");\n    return exercise.map(function(currentExercise, i) {\n      return <Exercise exercise={currentExercise} key={i} />;\n    });\n  }\n\n  upperBodyBList() {\n    const exercise = this.state.exercises.filter( current => current.exercise_day === \"Upper Body B\");\n    return exercise.map(function(currentExercise, i) {\n      return <Exercise exercise={currentExercise} key={i} />;\n    });\n  }\n\n  lowerBodyAList() {\n    const exercise = this.state.exercises.filter( current => current.exercise_day === \"Lower Body A\");\n    return exercise.map(function(currentExercise, i) {\n      return <Exercise exercise={currentExercise} key={i} />;\n    });\n  }\n\n  lowerBodyBList() {\n    const exercise = this.state.exercises.filter( current => current.exercise_day === \"Lower Body B\");\n    return exercise.map(function(currentExercise, i) {\n      return <Exercise exercise={currentExercise} key={i} />;\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <br></br>\n        <h3>Workout Plan</h3>\n        <br></br>\n        <h5>Upper Body A</h5>\n        <table className=\"table table-striped\" style={{ marginTop: 20 }} >\n          <thead>\n            <tr>\n              <th>Exercise</th>\n              <th>Weight</th>\n              <th>Sets</th>\n              <th>Reps</th>\n            </tr>\n          </thead>\n          <tbody>\n            { this.upperBodyAList() }\n          </tbody>\n        </table>\n        <br></br>\n        <h5>Lower Body A</h5>\n        <table className=\"table table-striped\" style={{ marginTop: 20 }} >\n          <thead>\n            <tr>\n              <th>Exercise</th>\n              <th>Weight</th>\n              <th>Sets</th>\n              <th>Reps</th>\n            </tr>\n          </thead>\n          <tbody>\n            { this.lowerBodyAList() }\n          </tbody>\n        </table>\n        <br></br>\n        <h5>Upper Body B</h5>\n        <table className=\"table table-striped\" style={{ marginTop: 20 }} >\n          <thead>\n            <tr>\n              <th>Exercise</th>\n              <th>Weight</th>\n              <th>Sets</th>\n              <th>Reps</th>\n            </tr>\n          </thead>\n          <tbody>\n            { this.upperBodyBList() }\n          </tbody>\n        </table>\n        <br></br>\n        <h5>Lower Body B</h5>\n        <table className=\"table table-striped\" style={{ marginTop: 20 }} >\n          <thead>\n            <tr>\n              <th>Exercise</th>\n              <th>Weight</th>\n              <th>Sets</th>\n              <th>Reps</th>\n            </tr>\n          </thead>\n          <tbody>\n            { this.lowerBodyBList() }\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../src/index.css\";\nimport CreateExercise from \"./components/create-exercise.component\";\nimport EditExercise from \"./components/edit-exercise.component\";\nimport WorkoutPlan from \"./components/workout-plan.component\";\n\n// import logo from \"./logo.png\";\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"container\">\n         <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          {/* <a className=\"navbar-brand\" href=\"https://codingthesmartway.com\" target=\"_blank\">\n            <img src={logo} width=\"30\" height=\"30\" alt=\"CodingTheSmartWay.com\" />\n          </a> */}\n            <Link to=\"/\" className=\"navbar-brand\">Weekly Lift</Link>\n            <div className=\"collapse navbar-collapse\">\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"navbar-item\">\n                  <Link to=\"/\" className=\"nav-link\">Workout Plan</Link>\n                </li>\n                <li className=\"navbar-item\">\n                  <Link to=\"/create\" className=\"nav-link\">Create New Exercise</Link>\n                </li>\n              </ul>\n            </div>\n         </nav>\n         <Route path=\"/\" exact component={WorkoutPlan} />\n        <Route path=\"/edit/:id\" component={EditExercise} />\n        <Route path=\"/create\" component={CreateExercise} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}